#!/bin/bash

set -e

# As we are probably not interactive, let's set some healthy defaults
export BORG_UNKNOWN_UNENCRYPTED_REPO_ACCESS_IS_OK=${BORG_UNKNOWN_UNENCRYPTED_REPO_ACCESS_IS_OK:-"yes"}
export BORG_RELOCATED_REPO_ACCESS_IS_OK=${BORG_RELOCATED_REPO_ACCESS_IS_OK:-"yes"}
export BORG_CHECK_I_KNOW_WHAT_I_AM_DOING=${BORG_CHECK_I_KNOW_WHAT_I_AM_DOING:-"no"}
export BORG_DELETE_I_KNOW_WHAT_I_AM_DOING=${BORG_DELETE_I_KNOW_WHAT_I_AM_DOING:-"no"}

TARGET_NO_ARCHIVE=`echo "$TARGET" | sed 's/::.*$//'`

if [ -n "$CEPH" ]; then 
  snap="$SOURCE/.snap/snap"
  if [ -d "$snap" ]; then
    echo "# rmdir \"$snap\""
    rmdir "$snap"
  fi

  echo "# mkdir \"$snap\""
  mkdir "$snap"

  echo "# cd \"$snap\""
  cd "$snap"
else
  echo "# cd \"$SOURCE\""
  cd $SOURCE
fi


trap 'echo $( date ) Backup interrupted >&2; exit 2' INT TERM

echo "$SSH_PRIVATE_KEY" > /root/.ssh/id_rsa
echo "$SSH_KNOWN_HOSTS" > /root/.ssh/known_hosts

chmod 600 /root/.ssh/id_rsa
chmod 600 /root/.ssh/known_hosts

info() { printf "\n=== %s %s ===\n\n" "$( date )" "$*" >&2; }

info "Starting backup"

echo "# borg create --stats --show-rc ${SYNC_OPTIONS:-} \"$TARGET\" ."
borg create --verbose --list --stats --show-rc ${SYNC_OPTIONS:-} "$TARGET" .

info "Pruning repository"

HOURLY="${HOURLY:-24}"
DAILY="${DAILY:-7}"
WEEKLY="${WEEKLY:-4}"
MONTHLY="${MONTHLY:-12}"
YEARLY="${YEARLY:-2}"

echo "# borg prune --list ${PRUNE_OPTIONS:-} --show-rc --keep-hourly \"$HOURLY\" --keep-daily \"$DAILY\" --keep-weekly \"$WEEKLY\" --keep-monthly \"$MONTHLY\" --keep-yearly \"$YEARLY\" \"$TARGET_NO_ARCHIVE\""
borg prune --list ${PRUNE_OPTIONS:-} --show-rc --keep-hourly "$HOURLY" --keep-daily "$DAILY" --keep-weekly "$WEEKLY" --keep-monthly "$MONTHLY" --keep-yearly "$YEARLY" "$TARGET_NO_ARCHIVE"

info "Compacting respoitory"

echo "# borg compact ${COMPACT_OPTIONS:-} \"$TARGET_NO_ARCHIVE\""
borg compact ${COMPACT_OPTIONS:-} "$TARGET_NO_ARCHIVE"

if [ -n "$CEPH" ]; then 
  echo "# rmdir \"$snap\""
  rmdir "$snap"
fi

info "FINISH"
